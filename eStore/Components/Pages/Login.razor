@page "/login"
@layout EmptyLayout
@rendermode InteractiveServer
@using Services.Interface
@using eStore.Components.Layout
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager
@inject JwtAuthenticationStateProvider AuthenticationStateProvider

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Open Sans", sans-serif;
    }

    body {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        width: 100%;
        padding: 0 10px;
    }

        body::before {
            content: "";
            position: absolute;
            width: 100%;
            height: 100%;
            background: url('https://res.cloudinary.com/dk3yac2ie/image/upload/v1743618955/asset/byvor7lwywqcuqdbdmcv.jpg'), #000;
            background-position: center;
            background-size: cover;
            filter: brightness(50%);
        }

    .wrapper {
        width: 400px;
        border-radius: 8px;
        padding: 30px;
        text-align: center;
        border: 1px solid rgba(255, 255, 255, 0.5);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        background-color: rgba(0, 0, 0, 0.6);
    }

    form {
        display: flex;
        flex-direction: column;
    }

    h2 {
        font-size: 2rem;
        margin-bottom: 20px;
        color: #fff;
    }

    .input-field {
        position: relative;
        border-bottom: 2px solid #ccc;
        margin: 15px 0;
    }

        .input-field label {
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(-50%);
            color: #fff;
            font-size: 16px;
            pointer-events: none;
            transition: 0.15s ease;
        }

        .input-field input {
            width: 100%;
            height: 40px;
            background: transparent;
            border: none;
            outline: none;
            font-size: 16px;
            color: #fff;
        }

            .input-field input:focus ~ label,
            .input-field input:valid ~ label {
                font-size: 0.8rem;
                top: 10px;
                transform: translateY(-120%);
            }

    .forget {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 25px 0 35px 0;
        color: #fff;
    }

    #remember {
        accent-color: #fff;
    }

    .forget label {
        display: flex;
        align-items: center;
    }

        .forget label p {
            margin-left: 8px;
        }

    .wrapper a {
        color: #efefef;
        text-decoration: none;
        font-size: 14px;
        margin-top: 20px; /* Tăng khoảng cách */
        display: inline-block;
    }

        .wrapper a:hover {
            text-decoration: underline;
        }
    button {
        background: #fff;
        color: #000;
        font-weight: 600;
        border: none;
        padding: 12px 20px;
        cursor: pointer;
        border-radius: 3px;
        font-size: 16px;
        margin-top: 30px;
        border: 2px solid transparent;
        transition: 0.3s ease;
    }

        button:hover {
            color: #fff;
            border-color: #fff;
            background: rgba(255, 255, 255, 0.15);
        }

    .register {
        text-align: center;
        margin-top: 30px;
        color: #fff;
    }

    .error-message {
        color: #ff4d4d;
        margin-bottom: 15px;
    }
</style>

<div class="wrapper">
    <form>
        <h2>Login</h2>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p class="error-message">@ErrorMessage</p>
        }

        <div class="input-field">
            <input type="text" @bind="Email" required>
            <label>Enter your email</label>
        </div>

        <div class="input-field">
            <input type="password" @bind="Password" required>
            <label>Enter your password</label>
        </div>

        <button type="button" @onclick="PerformLogin">Log In</button>

        <a href="/register">Don't have an account? Register here</a>
    </form>
</div>


@code {
    private string Email { get; set; } = "";
    private string Password { get; set; } = "";
    private string ErrorMessage { get; set; } = "";

    private async Task PerformLogin()
    {
        var result = await AuthService.LoginAsync(Email, Password);
        if (result)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            if (user.IsInRole("Admin"))
            {
                NavManager.NavigateTo("/members");
            }
            else
            {
                NavManager.NavigateTo("/");
            }
        }
        else
        {
            ErrorMessage = "Invalid email or password.";
        }
    }
}
