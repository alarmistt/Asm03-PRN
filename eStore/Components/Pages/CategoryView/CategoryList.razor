@page "/categories"
@using BusinessObject.Entities
@using Services.Interface
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="container mt-5">
    <div class="card shadow-sm border-0 rounded bg-light">
        <div class="card-header bg-warning-subtle text-dark text-center py-3 rounded-top">
            <h3 class="mb-0">Categories</h3>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-between mb-3">
                <h5 class="text-secondary">Manage your categories efficiently</h5>
                <button class="btn btn-outline-success px-4 fw-bold" @onclick="() => CreateCategory()">
                    <i class="bi bi-plus-lg"></i> Add Category
                </button>
            </div>

            <div class="mb-3 d-flex">
                <input type="text" class="form-control me-2" placeholder="Search category by name..."
                       @bind="searchTerm" />
                <button class="btn btn-outline-primary" @onclick="SearchCategories">Search</button>
            </div>

            @if (categories == null || !categories.Any())
            {
                <div class="text-center py-5">
                    <p class="text-muted">No categories available. Start by adding a new one.</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover align-middle text-center bg-white shadow-sm">
                        <thead class="bg-secondary text-white">
                            <tr>
                                <th>Category ID</th>
                                <th>Category Name</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in categories)
                            {
                                <tr class="table-row">
                                    <td class="fw-bold">@category.CategoryId</td>
                                    <td>@category.CategoryName</td>
                                    <td>@category.Description</td>
                                    <td>
                                        <button class="btn btn-outline-warning btn-sm mx-1" @onclick="() => EditCategory(category.CategoryId)">
                                            <i class="bi bi-pencil-square"></i> Edit
                                        </button>
                                        <button class="btn btn-outline-danger btn-sm mx-1" @onclick="() => DeleteCategory(category.CategoryId)">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .table-row:hover {
        background-color: rgba(13, 110, 253, 0.1);
        transition: background-color 0.3s ease;
    }
</style>

@code {
    private List<Category> categories = new();
    private string searchTerm = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

    private async Task LoadCategories()
    {
        try
        {
            categories = (await CategoryService.GetCategories(searchTerm)).ToList();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching categories: {ex.Message}");
        }
    }

    private async Task SearchCategories()
    {
        await LoadCategories();
    }

    private void CreateCategory()
    {
        Console.WriteLine("✅ Button Clicked! Navigating to /category/edit");
        NavigationManager.NavigateTo("/category/edit");
    }

    private void EditCategory(int categoryId)
    {
        Console.WriteLine($"Navigating to /category/edit/{categoryId}");
        NavigationManager.NavigateTo($"/category/edit/{categoryId}");
    }

    private async Task DeleteCategory(int categoryId)
    {
        try
        {
            Console.WriteLine($"Deleting category: {categoryId}");
            await CategoryService.DeleteCategory(categoryId);
            await LoadCategories();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting category: {ex.Message}");
        }
    }
}
