@page "/members"
@using BusinessObject.Entities
@using Services.Interface
@inject IMemberService MemberService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="container mt-5">
    <div class="card shadow-sm border-0 rounded bg-white">
        <div class="card-header text-white text-center py-3 rounded-top" style="background-color: #6c757d;">
            <h3 class="mb-0">Members Management</h3>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h5 class="text-secondary">Easily manage your members</h5>
                <button class="btn btn-primary fw-bold" @onclick="() => CreateMember()">
                    <i class="bi bi-person-plus-fill"></i> Add Member
                </button>
            </div>

            <div class="row g-2 mb-4">
                <div class="col-md-3">
                    <input type="text" class="form-control" placeholder="Search by Email" @bind="searchEmail" />
                </div>
                <div class="col-md-3">
                    <input type="text" class="form-control" placeholder="Search by Company" @bind="searchCompany" />
                </div>
                <div class="col-md-3">
                    <input type="text" class="form-control" placeholder="Search by City" @bind="searchCity" />
                </div>
                <div class="col-md-3">
                    <button class="btn btn-outline-primary w-100" @onclick="SearchMember">
                        <i class="bi bi-search"></i> Search
                    </button>
                </div>
            </div>

            @if (members == null || !members.Any())
            {
                <div class="text-center py-5">
                    <p class="text-muted">No members found. Try adjusting your search or add a new member.</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle text-center bg-white shadow-sm rounded">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Email</th>
                                <th>Company</th>
                                <th>City</th>
                                <th>Country</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var member in members)
                            {
                                <tr class="table-row">
                                    <td class="fw-bold">@member.MemberId</td>
                                    <td>@member.Email</td>
                                    <td>@member.CompanyName</td>
                                    <td>@member.City</td>
                                    <td>@member.Country</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm mx-1" @onclick="() => EditMember(member.MemberId)">
                                            <i class="bi bi-pencil"></i> Edit
                                        </button>
                                        <button class="btn btn-danger btn-sm mx-1" @onclick="() => DeleteMember(member.MemberId)">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<style>
    body {
        background-color: #f8f9fa;
    }

    .table-row:hover {
        background-color: rgba(108, 117, 125, 0.15);
        transition: background-color 0.3s ease;
    }

    .btn-primary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

        .btn-primary:hover {
            background-color: #565e64;
        }

    .table-dark {
        background-color: #6c757d !important;
    }
</style>

@code {
    private List<Member> members = new();
    private string searchEmail = string.Empty;
    private string searchCompany = string.Empty;
    private string searchCity = string.Empty;
    //private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        await LoadMembers();
    }

    private async Task LoadMembers()
    {
        try
        {
            members = (await MemberService.GetMembers(searchEmail, searchCompany, searchCity)).ToList();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching members: {ex.Message}");
        }
    }

    private async Task SearchMember()
    {
        await LoadMembers();
    }

    private void CreateMember()
    {
        NavigationManager.NavigateTo("/member/edit");
    }

    private void EditMember(int memberId)
    {
        NavigationManager.NavigateTo($"/member/edit/{memberId}");
    }

    private async Task DeleteMember(int memberId)
    {
        try
        {
            await MemberService.DeleteMember(memberId);
            await LoadMembers();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting member: {ex.Message}");
        }
    }
}

