@page "/order/create"
@using BusinessObject.Entities
@using Services.Interface
@inject IOrderService OrderService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="container mt-5">
    <div class="card shadow-sm border-0 rounded bg-light">
        <div class="card-header bg-warning-subtle text-dark text-center py-3 rounded-top">
            <h3 class="mb-0">Create Order</h3>
        </div>
        <div class="card-body">
            <EditForm Model="order" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="memberId" class="form-label">Member ID</label>
                    <InputNumber id="memberId" class="form-control" @bind-Value="order.MemberId" />
                </div>

                <div class="mb-3">
                    <label for="orderDate" class="form-label">Order Date</label>
                    <InputDate id="orderDate" class="form-control" @bind-Value="order.OrderDate" />
                </div>

                <div class="mb-3">
                    <label for="requiredDate" class="form-label">Required Date</label>
                    <InputDate id="requiredDate" class="form-control" @bind-Value="order.RequiredDate" />
                </div>

                <div class="mb-3">
                    <label for="shippedDate" class="form-label">Shipped Date</label>
                    <InputDate id="shippedDate" class="form-control" @bind-Value="order.ShippedDate" />
                </div>

                <div class="mb-3">
                    <label for="freight" class="form-label">Freight</label>
                    <InputNumber id="freight" class="form-control" @bind-Value="order.Freight" />
                </div>

                <button type="submit" class="btn btn-primary">Create</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private Order order = new();

    private async Task HandleValidSubmit()
    {
        await OrderService.CreateOrderAsync(order);
        NavigationManager.NavigateTo("/orders");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/orders");
    }
}